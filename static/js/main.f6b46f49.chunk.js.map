{"version":3,"sources":["components/Marker.js","components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["Marker","text","onClick","style","bg","Map","useState","selected_facility_groups","set_selected_facility_groups","bootstrapURLKeys","key","defaultCenter","lat","lng","defaultZoom","yesIWantToUseGoogleMapApiInternals","e","console","log","facilities","map","facility","className","stopPropagation","groups","name","id","length","group","equipments","equipment","App","Navbar","variant","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";++BAEe,SAASA,EAAT,GAAuC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC/BC,EAAQ,CACZ,SAAY,IACZ,gBAHiD,EAALC,GAI5C,MAAS,QACT,OAAU,SACV,MAAS,SACT,SAAY,cACZ,aAAgB,MAChB,QAAW,OACX,WAAc,SACd,eAAkB,SAClB,OAAU,UACV,OAAU,kBAGZ,OACE,qBACEF,QAASA,EACTC,MAAOA,EAFT,SAIGF,I,YCfQ,SAASI,IACtB,IAD4B,EASxBC,mBAAS,IATe,mBAO1BC,EAP0B,KAQ1BC,EAR0B,KAW5B,OACE,eAAC,IAAD,CACEC,iBAAkB,CAAEC,IAAK,2CACzBC,cAbkB,CAAEC,IAAK,SAAUC,KAAM,UAczCC,YAbgB,GAchBC,oCAAkC,EAClCb,QAAS,SAACc,GACRC,QAAQC,IAAI,aAAa,QAAQF,EAAEJ,IAAK,QAAQI,EAAEH,KAClDL,EAA6B,KAPjC,UAmCIW,IAAWC,KAAI,SAAAC,GACb,OACE,cAACrB,EAAD,CACEsB,UAAU,YACVpB,QAAS,SAACc,GACRA,EAAEO,kBACFN,QAAQC,IAAIG,EAASG,QACrBhB,EAA6Ba,EAASG,SAGxCZ,IAAKS,EAAST,IACdC,IAAKQ,EAASR,IACdZ,KAAMoB,EAASI,KACfrB,GAAG,iBAJEiB,EAASK,OAUpBnB,EAAyBoB,QACzBpB,EAAyBa,KAAK,SAAAQ,GAC5B,GAAKA,EAAMC,WAAWF,OAEtB,OAAOC,EAAMC,WAAWT,KAAK,SAAAU,GAC3B,OACE,cAAC9B,EAAD,CAEEY,IAAKkB,EAAUlB,IACfC,IAAKiB,EAAUjB,IACfZ,KAAM6B,EAAUJ,GAChBtB,GAAG,kBAJE0B,EAAUJ,a,oBClDhBK,MA1Bf,WAEE,OACE,gCACE,eAACC,EAAA,EAAD,CAAQ5B,GAAG,OAAO6B,QAAQ,OAAOC,OAAO,KAAxC,UACE,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,gCACA,cAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBb,GAAG,mBAAmBJ,UAAU,sBAAjD,SACE,eAACkB,EAAA,EAAD,WACE,cAACA,EAAA,EAAIC,KAAL,CACEL,KAAK,6CADP,oBAGA,cAACI,EAAA,EAAIC,KAAL,CACEL,KAAK,uDADP,8BAGA,cAACI,EAAA,EAAIC,KAAL,CACEL,KAAK,oDADP,sCAMN,cAAC/B,EAAD,QCdSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f6b46f49.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Marker({ text, onClick, bg}) {\n  const style = {\n    'tabIndex': '0',\n    'backgroundColor': bg,\n    'color': 'white',\n    'height': '2.5rem',\n    'width': '2.5rem',\n    'minWidth': 'max-content',\n    'borderRadius': '50%',\n    'display': 'flex',\n    'alignItems': 'center',\n    'justifyContent': 'center',\n    'cursor': 'pointer',\n    'border': '3px solid grey',\n  };\n\n  return(\n    <div \n      onClick={onClick}\n      style={style}\n    >\n      {text}\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\n//import build_crimes_query from '../utility/build_crimes_query';\n//import { useFetch } from '../utility/useFetch';\nimport Marker from './Marker';\n//import { divisions_list } from '../utility/police_divisions';\nimport { facilities } from '../utility/facilities';\n\nexport default function Map() {\n  const defaultCenter = { lat: 43.76681, lng: -79.41636 };\n  const defaultZoom = 12;\n//  const [queryFilter, setQueryFilter] = useState({ 'reportedyear': '2020' });\n//  const crimes_query = build_crimes_query(queryFilter);\n//  const { data: points, loading } = useFetch(crimes_query);\n  const [\n    selected_facility_groups, \n    set_selected_facility_groups\n  ] = useState([]);\n\n  return(\n    <GoogleMapReact \n      bootstrapURLKeys={{ key: 'AIzaSyCoMeZ8bHHD1zQIFSslht_znET2EEyTK0s' }}\n      defaultCenter={defaultCenter}\n      defaultZoom={defaultZoom}\n      yesIWantToUseGoogleMapApiInternals\n      onClick={(e) => {\n        console.log('mapclick\\n','lat: '+e.lat, 'lng :'+e.lng)\n        set_selected_facility_groups([]); }}\n    >\n      {\n        // ** police crimes\n        //!loading && points.features.length &&\n        //  points.features.map(point => {\n        //    return(\n        //      <Marker\n        //        key={point.attributes.ObjectId}\n        //        lat={point.geometry.y}\n        //        lng={point.geometry.x}\n        //        text={point.attributes.MCI}\n        //      />\n        //    );\n        //  })\n        //\n        // ** police divisions\n        //divisions_list.map(division => {\n        //  return(\n        //    <Marker\n        //      key={division.name}\n        //      lat={division.lat}\n        //      lng={division.lng}\n        //      text={division.name}\n        //    />\n        //  ) \n        //})\n        // ** facilities\n        facilities.map(facility=> {\n          return(\n            <Marker\n              className='mapMarker'\n              onClick={(e)=>{\n                e.stopPropagation();\n                console.log(facility.groups);\n                set_selected_facility_groups(facility.groups)\n              }}\n              key={facility.id}\n              lat={facility.lat}\n              lng={facility.lng}\n              text={facility.name}\n              bg='rgb(50,50,50)'\n            />\n          ) \n        })\n      }\n      {\n        selected_facility_groups.length && \n        selected_facility_groups.map( group => {\n          if (!group.equipments.length) return;\n          \n          return group.equipments.map( equipment => {\n            return(\n              <Marker\n                key={equipment.id}\n                lat={equipment.lat}\n                lng={equipment.lng}\n                text={equipment.id}\n                bg='rgb(150,50,50)'\n              />\n            )\n          });\n        })\n      }\n    </GoogleMapReact>\n  );\n}\n\n","import React from 'react';\nimport Map from './components/Map';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction App() {\n\n  return (\n    <div>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Navbar.Brand href=\"#home\">Cluster Playground</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n        <Navbar.Collapse id=\"basic-navbar-nav\" className='justify-content-end'>\n          <Nav>\n            <Nav.Link \n              href=\"https://github.com/hungryvito/cluster_test\"\n            >github</Nav.Link>\n            <Nav.Link \n              href=\"https://github.com/google-map-react/google-map-react\"\n            >google-map-react</Nav.Link>\n            <Nav.Link \n              href=\"https://github.com/leighhalliday/use-supercluster\"\n            >use-supercluster</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Map/>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}